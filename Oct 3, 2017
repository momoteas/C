1 字符串：
    ：以0（整数0）结尾的一串字符。0或'\0'是一样的，但是和'0'不同；
    ：0标志字符串的结束，但它不是字符串的一部分。计算字符串长度的时候不包含这个0；
    ：字符串以数组的形式存在内存中，以数组或指针的形式访问。更多的是以指针的形式；
    ：string.h里有很多处理字符串的函数；
    ：char *str="hello", char word[]="hello", char line[10]="hello";
    ：字符串常量：双引号括起来，“hello”,编译器会自动在末尾增加'\0'；
    ：总结：
        ：C语言的字符串是以字符数组的形式存在额；
        ：不能用运算符 对字符串做运算；
        ：通过数组的方式可以遍历字符串；
        ：唯一特殊的地方时字符串字面量可以用来初始化字符数组；
        
2 字符串变量：
    ：char* s="hello, world!";
        ：s是一个指针，初始化为指向一个字符串常量。由于这个常量所在的地方，所以实际上s是const char* s，但是由于历史的原因，编译器接受不带const
        的写法。但是试图对s所指的字符串做写入会导致严重的后果。但是如果定义一个 char a[]="hello, world"是可以修改的，因为“hello,world"被
        放置在数组里，而指针则为指向实际存在“hello,world"的地方；
        ：理论上说，如果要构造一个字符串用数组；如果要处理一个字符串用指针；

3 字符串的输入和输出：
    ：scanf("%s", sting), scanf读入一个单词（到空格、tab或回车为止）。scanf是不安全的，因为不知道要读入的内容的长度；
      可以加入数字 scanf("%7s", string)来限制读入的个数；
    ：printf("%s", string);
    ：空字符串“”；
    
4 字符串数组：
    ：char a[][] != char *a[];后者表示定义了一个指针数组，数组的每一个单元是一个指针，指向一个字符串的地址；
    
5 单字符的输入和输出：
    ：putchar: int putchar(int c)
            ： 向标准输出写一个字符
            ： 返回写了几个字符，EOF（-1）表示写失败；
    : getchar: int getchar(void);
            ： 从标准输入读入一个字符；
            ： 返回类型是int是为了返回EOF(-1);UNIT的EOF是ctrl+D;

5 字符串函数:
    ：头文集string.h,包含：strlen, strcmp, strcpy, strcat, strchr, strstr;
    ：
    
    
    
    
    
    
    
    
    
    
    
    
    

