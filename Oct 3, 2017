1 字符串：
    ：以0（整数0）结尾的一串字符。0或'\0'是一样的，但是和'0'不同；
    ：0标志字符串的结束，但它不是字符串的一部分。计算字符串长度的时候不包含这个0；
    ：字符串以数组的形式存在内存中，以数组或指针的形式访问。更多的是以指针的形式；
    ：string.h里有很多处理字符串的函数；
    ：char *str="hello", char word[]="hello", char line[10]="hello";
    ：字符串常量：双引号括起来，“hello”,编译器会自动在末尾增加'\0'；
    ：总结：
        ：C语言的字符串是以字符数组的形式存在额；
        ：不能用运算符 对字符串做运算；
        ：通过数组的方式可以遍历字符串；
        ：唯一特殊的地方时字符串字面量可以用来初始化字符数组；
        
2 字符串变量：
    ：char* s="hello, world!";
        ：s是一个指针，初始化为指向一个字符串常量。由于这个常量所在的地方，所以实际上s是const char* s，但是由于历史的原因，编译器接受不带const
        的写法。但是试图对s所指的字符串做写入会导致严重的后果。但是如果定义一个 char a[]="hello, world"是可以修改的，因为“hello,world"被
        放置在数组里，而指针则为指向实际存在“hello,world"的地方；
        ：理论上说，如果要构造一个字符串用数组；如果要处理一个字符串用指针；

3 字符串的输入和输出：
    ：scanf("%s", sting), scanf读入一个单词（到空格、tab或回车为止）。scanf是不安全的，因为不知道要读入的内容的长度；
      可以加入数字 scanf("%7s", string)来限制读入的个数；
    ：printf("%s", string);
    ：空字符串“”；
    
4 字符串数组：
    ：char a[][] != char *a[];后者表示定义了一个指针数组，数组的每一个单元是一个指针，指向一个字符串的地址；
    
5 单字符的输入和输出：
    ：putchar: int putchar(int c)
            ： 向标准输出写一个字符
            ： 返回写了几个字符，EOF（-1）表示写失败；
    : getchar: int getchar(void);
            ： 从标准输入读入一个字符；
            ： 返回类型是int是为了返回EOF(-1);UNIT的EOF是ctrl+D;

5 字符串函数:
    ：头文集string.h,包含：strlen, strcmp, strcpy, strcat, strchr, strstr;
    ：C99关键字restrict：不能重叠；
    ：安全版本：char* strncpy(), char* strncat(), int strncmp();
    
6 枚举：
    1）:枚举是一种用户定义的数据类型，它用关键字enum以如下语法来声明：enum 枚举类型名字{名字0，...，名字n};
      ：枚举类型名字通常并不真的使用，要用的是在大括号里的名字，因为它们就是符号常量，它们的类型是int, 值则依次从0到n。
    如enum color{red, yellow, green}。就创建了三个常量，red的值是0，yellow是1...
      ：当需要一些可以排列起来的常量值时，定义枚举的意义就是给了这些常量值名字；
      ：声明枚举量的时候可以指定值：enum color{red=1, yellow, green=5}
        
7 结构类型：
    1）：关键字：struct 类型名称{...};(注";"是必须的)；
       ：和本地变量一样，在函数内部声明的结构类型只能在函数内部使用。如果在函数外部声明结构类型，这样就可以被多个函数所使用了；
       ：声明结构的形式：struct 类型名称 变量名；
       ：声明形式二：  struct {
                        int x;
                        int y
                    }p1, p2;
                    p1和p2都是一种无名结构；
       ：成员变量的访问通过"."运算符取得；
       ：赋值：struct data today={07,31,2014};
            ：struct data today={month=7, year=2014};
       ：结构成员类型可以不同；     
    
    
    
    
    
    
    
    
    
    

