1.1 数据类型：
        1）内存中的表示：float以编码方式表示，而int以二进制表示；
        2）sizeof: 查看类型所占字节（byte）数；
        3）二进制负数：
                1> 补码：
        4）数的范围： 
        
1.2 整数的输入输出：
        1）%d: int; %u: unsigned; %ld: long long; %lu: unsigned long long; 
        2) 8进制和16进制：
                1> 输入：以0开头：8进制；以0x开头：16进制；
                2> 输出：%o, %x;
                
1.3 选择数据类型：
        1）与硬件类型相关：
        
1.4 浮点类型： 
        1）float: 32位，范围，有效数字：7， scanf: %f, printf: %f, %e;
        2）double: 64位，范围，有效数字：15，scanf: %lf, printf: %f, %e;
        3) 输出精度：%.2f;
        4）inf: 表示超出范围的浮点数，例如：1.0/0.0；nan：表示不存在的浮点数，例如：0.0/0.00;
        5）带小数点的字面量是double, 而非float, float需要用f或F后缀来标明身份；
        6）浮点数的内部表达：以编码形式表达；1bit:符号位，11bit:指数部分， 52bit:fraction部分；
        7）选择浮点类型：如果无特殊要求，只使用double;
        
1.5 字符类型：
        1）单引号表示字符字面量: 'c', '1';
        2）输出：%c；
        3）占1byte;
        4）逃逸字符："\";
                \b: 回退一格，123\bA ---> 12A;
                \t: 制表位；
                \n: 换行；
                \r: 回车；
        
1.6 类型自动转换：
        1）任何小于int的类型，都会被自动转换为int类型；
        2）对于scanf: short类型：%hd, long类型：%ld;
        3）强制类型转换：（类型），例如：（int）10.2，优先级高于四则运算；
        
1.7 bool类型：
        1）头文件：#include<stdbool.h>;
        
1.8 逻辑运算：
        1）结果只有0或1；
        2）运算符：！（非）， &&（与）， ||（或），例如：x>4 && x<6;
        3）优先级：！> && > ||，比赋值运算高，比关系运算低；
        4）短路：
        
        
        
        
        
        
        
        
        
